name: Deploy to Registries

on:
  push:
    branches:
      - 'main'
    tags:
      - '*'

jobs:
  java-deploy:
    env:
      IMAGE_NAME: "content-git-api"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 11
      - name: Maven Native Build
        run: mvn -B package -Pnative -Dquarkus.native.container-build=true
      - name: Prepare
        id: prep
        run: |
          VERSION=latest
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          fi
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

#      - name: Login to DockerHub
#        uses: docker/login-action@v1
#        with:
#          username: ${{ secrets.CI_DOCKERHUB_USERNAME }}
#          password: ${{ secrets.CI_DOCKERHUB_TOKEN }}
      - name: Login to Quay.io
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.CI_QUAY_USERNAME }}
          password: ${{ secrets.CI_QUAY_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: api
          file: ./api/src/main/docker/Dockerfile.native
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            quay.io/${{ secrets.REGISTRY_NAMESPACE }}/${{ env.IMAGE_NAME }}:${{ steps.prep.outputs.version }}
#            ${{ secrets.REGISTRY_NAMESPACE }}/${{ env.IMAGE_NAME }}:${{ steps.prep.outputs.version }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  init-deploy:
    env:
      IMAGE_NAME: "content-git-init"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Prepare
        id: prep
        run: |
          VERSION=latest
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          fi
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

#      - name: Login to DockerHub
#        uses: docker/login-action@v1
#        with:
#          username: ${{ secrets.CI_DOCKERHUB_USERNAME }}
#          password: ${{ secrets.CI_DOCKERHUB_TOKEN }}
      - name: Login to Quay.io
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.CI_QUAY_USERNAME }}
          password: ${{ secrets.CI_QUAY_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: init
          file: ./init/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            quay.io/${{ secrets.REGISTRY_NAMESPACE }}/${{ env.IMAGE_NAME }}:${{ steps.prep.outputs.version }}
#            ${{ secrets.REGISTRY_NAMESPACE }}/${{ env.IMAGE_NAME }}:${{ steps.prep.outputs.version }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
